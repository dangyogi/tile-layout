# layouts.yaml

---

row_infinite:
    parameters: [tile]
    type: repeat
    step:
        type: place
        tile: tile
    increment: [tile.skip_x + plan.grout_gap, 0]

row_n:
    parameters: [tile, count]
    type: repeat
    step:
        type: place
        tile: tile
    increment: [tile.skip_x + plan.grout_gap, 0]
    times: count

stepped:
    parameters: [tile, percent_offset]
    constants:
        x: tile.skip_x + plan.grout_gap
    type: repeat
    step:
        type: row_infinite
        tile: tile
    increment: [x * percent_offset, tile.skip_y + plan.grout_gap]

stacked:
    parameters: [tile]
    type: stepped
    tile: tile
    percent_offset: 0

hopscotch:
    parameters: [tile_a, tile_b, right]
    constants:
        conditionals:
            - test: right
              true:
                  inc: [tile_a.skip_x + plan.grout_gap, -tile_b.skip_y - plan.grout_gap]
                  b_placement: [0, tile_a.skip_y + plan.grout_gap]
                  outer_inc: [tile_b.skip_x + plan.grout_gap, tile_a.skip_y + plan.grout_gap]
              false:
                  inc: [tile_a.skip_x + plan.grout_gap, tile_b.skip_y + plan.grout_gap]
                  b_placement: [-tile_b.skip_x - plan.grout_gap, tile_a.skip_y - tile_b.skip_y]
                  outer_inc: [-tile_b.skip_x - plan.grout_gap, tile_a.skip_y + plan.grout_gap]
    type: repeat
    step:
        type: sequence
        steps:
            - type: repeat
              step:
                  type: place
                  tile: tile_a
              increment: inc
            - type: repeat
              step:
                  type: place
                  tile: tile_b
              start: b_placement
              increment: inc
    increment: outer_inc

herringbone:
    parameters: [tile, right]
    type: hopscotch
    tile_a: tile
    tile_b: tile.flipped

checkerboard:
    parameters: [tile_a, tile_b]
    constants:
        skip_x: tile_a.skip_x + tile_b.skip_x + 2 * plan.grout_gap
    type: sequence
    steps:
        - type: repeat
          step:
              type: repeat
              step:
                  type: place
                  tile: tile_a
              increment: [skip_x, 0]
          increment: [skip_x / 2, tile_a.skip_y + plan.grout_gap]
        - type: repeat
          step:
              type: repeat
              step:
                  type: place
                  tile: tile_b
              increment: [skip_x, 0]
              start: [skip_x / 2, 0]
          increment: [skip_x / 2, tile_b.skip_y + plan.grout_gap]

box:
    parameters: [tile, num_x, num_y, start]
    type: repeat
    step:
        type: repeat
        step:
            type: place
            tile: tile
        increment: [tile.skip_x + plan.grout_gap, 0]
        times: num_x
    increment: [0, tile.skip_y + plan.grout_gap]
    times: num_y
    start: start

border:
    parameters: [tile, num_x, num_y, start_x, start_y]
    constants:
        num_x_1: num_x - 1
        num_y_1: num_y - 1
    type: sequence
    steps:
        - type: repeat  # bottom
          step:
              type: place
              tile: tile
          increment: [tile.skip_x + plan.grout_gap, 0]
          start: [start_x, start_y]
          times: num_x
        - type: repeat  # top
          step:
              type: place
              tile: tile
          increment: [tile.skip_x + plan.grout_gap, 0]
          start: [start_x, start_y + tile.skip_y * num_y_1 + plan.grout_gap * num_y_1]
          times: num_x
        - type: repeat  # left
          step:
              type: place
              tile: tile
          increment: [0, tile.skip_y + plan.grout_gap]
          start: [start_x, start_y + tile.skip_y + plan.grout_gap]
          times: num_y - 2
        - type: repeat  # right
          step:
              type: place
              tile: tile
          increment: [0, tile.skip_y + plan.grout_gap]
          start: [start_x + tile.skip_x * num_x_1 + plan.grout_gap * num_x_1,
                  start_y + tile.skip_y + plan.grout_gap]
          times: num_y - 2

flower:
    parameters: [tile]
    type: sequence
    steps:
        - type: place
          tile: tile
          angle: 90
          save:
              next_x: next_x
              next_y: next_y
        - type: place
          tile: tile
          angle: 180
          offset: [next_x, 0]
        - type: place
          tile: tile
          angle: 0
          offset: [0, next_y]
        - type: place
          tile: tile
          angle: -90
          offset: [next_x, next_y]
